name: medigo-deploy-1.0.0

on:
  workflow_dispatch:
    inputs:
      name:
        description: "Test scenario"
        required: true
        default: "Run Deployment"
      home:
        description: "User name"
        required: false
        default: "YHLEE9753"
  push:
    branches: [ "main" ]

env:
  RESOURCE_PATH: ./src/main/resources/application-main.yml

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    # Java 11 설정
    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'temurin'
    # yml 파일 설정
    - name: Set yaml file
      uses: microsoft/variable-substitution@v1
      with:
        files: ${{ env.RESOURCE_PATH }}
      env:
        spring.datasource.username: ${{ secrets.RDS_USERNAME }}
        spring.datasource.password: ${{ secrets.RDS_PASSWORD }}
    # Gradle 권한 설정
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    # test 없이 build 진행
    - name: Build with Gradle
      run: ./gradlew build -x test

    - name: Docker build
      run: |
        docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
        docker build -t dldydgns53/medigo .
        docker push dldydgns53/medigo


    - name: Deploy
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.AWS_SERVER_DNS }}
        username: ec2-user
        key: ${{ secrets.SSH_KEYGEN_PRIVATE_KEY }}
        script: |
          docker pull dldydgns53/medigo
          docker stop server
          docker network create -d bridge medinet
          docker run -d --network medinet --network-alias mysql -v  /build/DB/mysql:/var/lib/mysql --name mysqlDB -e MYSQL_DATABASE=kppl -e MYSQL_USER=${{ secrets.RDS_USERNAME }} -e MYSQL_PASSWORD=${{ secrets.RDS_PASSWORD }} -e MYSQL_ROOT_PASSWORD=${{ secrets.RDS_PASSWORD }} -p 3306:3306 mysql
          docker run -d --network medinet --network-alias redis -v  /build/DB/redis:/var/lib/redis --name redis_boot -d -p 6379:6379 redis
          docker run -d --rm --name server --network medinet -p 80:8080 dldydgns53/medigo